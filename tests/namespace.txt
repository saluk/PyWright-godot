macro list_in_macro
delvar mylist
set script.mylist:end item1
set script.mylist:end item2
set script.mylist:end item3
set i 0
label loop
"{$script.mylist:$i} {$i}"
addvar i 1
is i > $script.mylist:length endscript
goto loop
endmacro

list_in_macro
"{$script.mylist:0} is empty"

set x 200
"The global x is 200: {$x}"
set script.x 100
"The main script's variable x == 100: {$script.x}"

# set script based on a variable
set my_name patrick
set script.$my_name.happy true
"patrick is happy? true:{$script.patrick.happy}"

obj general/back name=back_button

set back_button.hello hello world
"Back button hello = hello world: {$back_button.hello}"
delete name=back_button
"Back button hello is gone: {$back_button.hello}"

localvars

"the global x is still 200: {$x}"
"the main scripts x is still 100: {$script.x}"

macro localvars
set script.x 5
"This macro scripts variable x == 5 {$script.x}"
endmacro

# access namespace like array
set hats:0 top
set hats:1 baseball cap
set hats:2 sun
"top,bball,sun: {$hats:0} {$hats:1} {hats:2}"

# delete item from array
delvar hats:1
"top,sun: {$hats:0} {$hats:1}"

# add to end of array
set hats:end baseball cap
"top,sun,bball: {$hats:0} {$hats:1} {$hats:2}"

# clear array
delvar hats
set hats:end sun
"sun: {$hats:0} {$hats:1} {$hats:2}"

# Iteration
set hats:end baseball cap
set hats:end top
"should print sun, bbal, then top"
set hatsi 0
label while
"item {$hatsi} current hat:{$hats:$hatsi} #hats:{$hats:length}"
addvar hatsi 1
is hatsi < $hats:length while

# namespace in an array
set objects:0.name fred
"after set"
"{$objects:0.name}"
set objects:0.height 6-11
"{$objects:0.name} {$objects:0.height}"

label weird
"next bit is weird"
set my_object.x 10
set my_object.color green
set my_object.size big
"my_object is at 10, green, and big:{n}{$my_object.x} {$my_object.color} {$my_object.size}{n}{$my_object} is nothing"
# overwrite my_object the namespace with a value
set my_object red
"{$my_object} is red, but {$my_object.x} {$my_object.color} {$my_object.size} are all blank"

set my_object.x 10
set my_object.color green
set my_object.size big
"my_object is at 10, green, and big:{n}{$my_object.x} {$my_object.color} {$my_object.size}{n}{$my_object} is nothing"

